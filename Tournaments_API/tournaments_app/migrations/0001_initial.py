# Generated by Django 4.2 on 2023-09-24 14:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_name', models.CharField(default='', max_length=256)),
                ('organizer_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'organization',
            },
        ),
        migrations.CreateModel(
            name='Participants',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('participant_id', models.UUIDField(default=uuid.UUID('e76a97b2-e905-4633-9e14-42aa0639aa6d'))),
                ('score', models.IntegerField(default=0)),
                ('checked_in', models.BooleanField(default=False)),
                ('game_username', models.CharField(default='', max_length=256)),
                ('username', models.CharField(default='', max_length=256)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'participants',
            },
        ),
        migrations.CreateModel(
            name='Pool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participants', models.ManyToManyField(to='tournaments_app.participants')),
            ],
        ),
        migrations.CreateModel(
            name='Tournaments',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=256, null=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(default=None, null=True)),
                ('is_ongoing', models.BooleanField(default=False)),
                ('type', models.IntegerField()),
                ('details', models.TextField(default='')),
            ],
            options={
                'db_table': 'tournaments',
            },
        ),
        migrations.CreateModel(
            name='Rounds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_at', models.DateTimeField()),
                ('end_at', models.DateTimeField(blank=True, null=True)),
                ('round_num', models.IntegerField()),
                ('participant_pool', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='tournaments_app.pool')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='tournaments_app.tournaments')),
            ],
            options={
                'db_table': 'rounds',
            },
        ),
        migrations.AddField(
            model_name='pool',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='tournaments_app.tournaments', unique=True),
        ),
        migrations.CreateModel(
            name='PlayerStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('omw', models.FloatField()),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='tournaments_app.participants')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='tournaments_app.tournaments')),
            ],
            options={
                'db_table': 'statistics',
            },
        ),
        migrations.AddField(
            model_name='participants',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='tournaments_app.tournaments'),
        ),
        migrations.AddField(
            model_name='participants',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='OrganizationAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField()),
                ('organization_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tournaments_app.organization')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'organization_admins',
            },
        ),
        migrations.AddField(
            model_name='organization',
            name='tournament',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tournaments_app.tournaments'),
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField()),
                ('warning_type', models.CharField()),
                ('tournament', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='tournaments_app.tournaments')),
            ],
            options={
                'db_table': 'notes',
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('match_id', models.UUIDField(primary_key=True, serialize=False)),
                ('match_type', models.IntegerField(choices=[(1, 'Swiss Bo1'), (2, 'Single Elimination Bo1'), (3, 'Swiss Bo3'), (4, 'Single Elimination Bo3')])),
                ('participant_one_result', models.IntegerField(default=0)),
                ('participant_two_result', models.IntegerField(default=0)),
                ('participant_one', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='first_participant', to='tournaments_app.participants')),
                ('participant_two', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='second_participant', to='tournaments_app.participants')),
                ('rounds', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='tournaments_app.rounds')),
            ],
            options={
                'db_table': 'matches',
            },
        ),
    ]
